<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hugo on Yukari Blog</title>
        <link>https://yukari.pages.dev/tags/hugo/</link>
        <description>Recent content in Hugo on Yukari Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 16 Aug 2024 00:00:00 +0800</lastBuildDate><atom:link href="https://yukari.pages.dev/tags/hugo/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo &#43; Github Pages/Cloudflare Pages搭建个人博客</title>
        <link>https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Fri, 16 Aug 2024 00:00:00 +0800</pubDate>
        
        <guid>https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;img src="https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/cover.webp" alt="Featured image of post Hugo &#43; Github Pages/Cloudflare Pages搭建个人博客" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;经历了一次服务器硬件的淘汰之后决定给自己写一些服务工具的备忘录以防硬盘爆炸重装时再踩一遍坑，在notion和一众博客方案中选择了部署方便的&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt;+&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;/&lt;a class=&#34;link&#34; href=&#34;https://dash.cloudflare.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt;的静态页面托管服务。遂有了这第一篇文章。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好处是成本很低，不需要服务器甚至域名也可以不需要，维护全部交给大厂，搭建完之后每次新文章只需提交到Github便会刷新构建。不过不管是Github还是Cloudflare国内总会抽风，会不定时分地区的可用性下降。如果只是个人用，代理常开的情况下是无感的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;final&#34;&gt;Final
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/final.webp&#34;
	width=&#34;2496&#34;
	height=&#34;1596&#34;
	srcset=&#34;https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/final_hu7002056249543732478.webp 1024w, https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/final_hu14365023071148062767.webp 2048w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;375px&#34;
	
&gt;&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
  选用的hugo主题是&lt;a href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34; style=&#34;text-decoration: underline; font-weight: bold;&#34;&gt;hugo-theme-stack&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;安装git与hugo&#34;&gt;安装Git与Hugo
&lt;/h2&gt;&lt;h3 id=&#34;安装git&#34;&gt;安装Git
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Git官网&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git-scm.com/downloads&lt;/a&gt; 一路下一步即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装hugo&#34;&gt;安装Hugo
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Github Releases&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/gohugoio/hugo/releases&lt;/a&gt;下载解压 &lt;br&gt;
务必选择&lt;strong&gt;extended&lt;/strong&gt;版本，如：hugo_extended_0.132.2_windows-amd64.zip &lt;br&gt;
放入指定目录如： &lt;code&gt;D:\tools\hugo_extended\hugo.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加系统变量 &lt;br&gt;
win+R输入sysdm.cpl → 高级 → 环境变量 → 系统变量找到Path变量 → 编辑 → 新建 → 将&lt;code&gt;hugo.exe&lt;/code&gt;的目录加入，如： &lt;code&gt;D:\tools\hugo_extended&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确认安装成功 &lt;br&gt;
cmd中输入&lt;code&gt;hugo version&lt;/code&gt;,输出以下即为成功
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C:\Users\User&amp;gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo v0.132.1-1bde700dfc0770bb11eb8445aff1ab5abdccb46e+extended windows/amd64 BuildDate=2024-08-13T10:10:10Z VendorInfo=gohugoio
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;新建hugo博客&#34;&gt;新建Hugo博客
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;新建一个目录，用来存放博客的根目录，如： &lt;code&gt;D:\tools\hugo&lt;/code&gt;，之后都将这个目录称为&lt;code&gt;根目录&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;cmd命令，其中blog可以自定义，也是生成的文件夹名
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hugo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;应用hugo主题&#34;&gt;应用Hugo主题
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;来到&lt;code&gt;D:\tools\hugo\blog&lt;/code&gt;文件夹下，cmd命令：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置美化&#34;&gt;配置&amp;amp;美化
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;来到&lt;code&gt;根目录\themes\hugo-theme-stack\exampleSite&lt;/code&gt;文件夹下，将&lt;code&gt;hugo.yaml&lt;/code&gt;文件复制至&lt;code&gt;根目录&lt;/code&gt;下，如果&lt;code&gt;根目录&lt;/code&gt;下有别的配置文件如&lt;code&gt;hugo.toml/JSON&lt;/code&gt;，将其删掉。然后打开&lt;code&gt;hugo.yaml&lt;/code&gt;，根据模板进行修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其中&lt;code&gt;favicon&lt;/code&gt;网站图标&lt;code&gt;favicon.ico&lt;/code&gt;需要放到&lt;code&gt;根目录\static&lt;/code&gt;下，然后配置是&lt;code&gt;favicon: /favicon.ico&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其中&lt;code&gt;avatar&lt;/code&gt;侧栏头像&lt;code&gt;avatar.png&lt;/code&gt;需要放到&lt;code&gt;根目录\assets\img&lt;/code&gt;下，然后配置是&lt;code&gt;src: img/avatar.png&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果需要搜索和归档栏，需要在主题模板&lt;code&gt;根目录\themes\hugo-theme-stack\exampleSite\content\page&lt;/code&gt;中找到对应的.md文件并放到根目录同样的文件夹下如:&lt;code&gt;根目录\content\page\search\index.md&lt;/code&gt;并按需修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来是样式的美化，供参考，&lt;code&gt;根目录\assets\scss&lt;/code&gt;下新建&lt;code&gt;custom.scss&lt;/code&gt;，并编辑：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
// 页面基本配色
:root {
// 全局顶部边距
&amp;ndash;main-top-padding: 30px;
// 全局卡片圆角
&amp;ndash;card-border-radius: 25px;
// 标签云卡片圆角
&amp;ndash;tag-border-radius: 8px;
// 卡片间距
&amp;ndash;section-separation: 40px;
// 全局字体大小
&amp;ndash;article-font-size: 1.8rem;
// 行内代码背景色
&amp;ndash;code-background-color: #f8f8f8;
// 行内代码前景色
&amp;ndash;code-text-color: #e96900;
// 暗色模式下样式
&amp;amp;[data-scheme=&amp;ldquo;dark&amp;rdquo;] {
// 行内代码背景色
&amp;ndash;code-background-color: #f8f8f814;
// 行内代码前景色
&amp;ndash;code-text-color: #e96900;
// 暗黑模式下背景色
//&amp;ndash;body-background: #000;
// 暗黑模式下卡片背景色
//&amp;ndash;card-background: hsl(225 13% 8% / 1);
}
}
//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
// 修复引用块内容窄页面显示问题
a {
word-break: break-all;
}&lt;/p&gt;
&lt;p&gt;code {
word-break: break-all;
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
// 文章封面高度
.article-list article .article-image img {
width: 100%;
height: 200px !important;
object-fit: cover;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@include respond(md) {
    height: 250px !important;
}

@include respond(xl) {
    height: 285px !important;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
// 文章内容图片圆角阴影
.article-page .main-article .article-content {
img {
max-width: 96% !important;
height: auto !important;
border-radius: 8px;
}
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
// 文章内容引用块样式
.article-content {
blockquote {
border-left: 6px solid #d57b5e !important;
background: #ffefdf;
}
}
[data-scheme=&amp;ldquo;dark&amp;rdquo;] {
.article-content {
blockquote {
border-left: 6px solid #d57b5e !important;
background: #d57c5e54;
}
}
}
// &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
// 代码块样式修改
.highlight {
max-width: 102% !important;
background-color: var(&amp;ndash;pre-background-color);
padding: var(&amp;ndash;card-padding);
position: relative;
border-radius: 20px;
margin-left: -7px !important;
margin-right: -12px;
box-shadow: var(&amp;ndash;shadow-l1) !important;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;:hover {
  .copyCodeButton {
    opacity: 1;
  }
}

// keep Codeblocks LTR
[dir=&amp;quot;rtl&amp;quot;] &amp;amp; {
  direction: ltr;
}

pre {
  margin: initial;
  padding: 0;
  margin: 0;
  width: auto;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;// light模式下的代码块样式调整
[data-scheme=&amp;ldquo;light&amp;rdquo;] .article-content .highlight {
background-color: #fff9f3;
}&lt;/p&gt;
&lt;p&gt;[data-scheme=&amp;ldquo;light&amp;rdquo;] .chroma {
color: #ff6f00;
background-color: #fff9f3cc;
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
// 设置选中字体的区域背景颜色
//修改选中颜色
::selection {
color: #fff;
background: #34495e;
}&lt;/p&gt;
&lt;p&gt;a {
text-decoration: none;
color: var(&amp;ndash;accent-color);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;:hover {
  color: var(--accent-color-darker);
}

&amp;amp;.link {
  color: #4288b9ad;
  font-weight: 600;
  padding: 0 2px;
  text-decoration: none;
  cursor: pointer;

  &amp;amp;:hover {
    text-decoration: underline;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
//文章封面高度更改
.article-list article .article-image img {
width: 100%;
height: 150px;
object-fit: cover;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@include respond(md) {
  height: 200px;
}

@include respond(xl) {
  height: 305px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
// 全局页面布局间距调整
.main-container {
min-height: 100vh;
align-items: flex-start;
padding: 0 15px;
gap: var(&amp;ndash;section-separation);
padding-top: var(&amp;ndash;main-top-padding);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@include respond(md) {
  padding: 0 37px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
//页面三栏宽度调整
.container {
margin-left: auto;
margin-right: auto;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.left-sidebar {
  order: -3;
  max-width: var(--left-sidebar-max-width);
}

.right-sidebar {
  order: -1;
  max-width: var(--right-sidebar-max-width);

  /// Display right sidebar when min-width: lg
  @include respond(lg) {
    display: flex;
  }
}

&amp;amp;.extended {
  @include respond(md) {
    max-width: 1024px;
    --left-sidebar-max-width: 25%;
    --right-sidebar-max-width: 22% !important;
  }

  @include respond(lg) {
    max-width: 1280px;
    --left-sidebar-max-width: 20%;
    --right-sidebar-max-width: 30%;
  }

  @include respond(xl) {
    max-width: 1453px; //1536px;
    --left-sidebar-max-width: 15%;
    --right-sidebar-max-width: 25%;
  }
}

&amp;amp;.compact {
  @include respond(md) {
    --left-sidebar-max-width: 25%;
    max-width: 768px;
  }

  @include respond(lg) {
    max-width: 1024px;
    --left-sidebar-max-width: 20%;
  }

  @include respond(xl) {
    max-width: 1280px;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
//全局页面小图片样式微调
.article-list&amp;ndash;compact article .article-image img {
width: var(&amp;ndash;image-size);
height: var(&amp;ndash;image-size);
object-fit: cover;
border-radius: 17%;
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
//固定代码块的高度
.article-content {
.highlight {
padding: var(&amp;ndash;card-padding);
pre {
width: auto;
max-height: 20em;
}
}
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
// 修改首页搜索框样式
.search-form.widget input {
font-size: 1.5rem;
padding: 44px 25px 19px;
}&lt;/p&gt;
&lt;p&gt;//&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
//归档页面双栏
/* 归档页面两栏 */
@media (min-width: 1024px) {
.article-list&amp;ndash;compact {
display: grid;
grid-template-columns: 1fr 1fr;
background: none;
box-shadow: none;
gap: 1rem;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  article {
    background: var(--card-background);
    border: none;
    box-shadow: var(--shadow-l2);
    margin-bottom: 8px;
    border-radius: 16px;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;上传至github&#34;&gt;上传至Github
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在进行过一次&lt;code&gt;hugo&lt;/code&gt;命令之后会在&lt;code&gt;根目录\public&lt;/code&gt;下构建静态网站，需要上传至Github的就是这一部分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;新建一个GitHub仓库，仓库名是&lt;code&gt;Github用户名.github.io&lt;/code&gt;，如：&lt;code&gt;user.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;与GitHub仓库关联，在&lt;code&gt;根目录\public&lt;/code&gt;下，依次输入以下cmd命令：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:user/user.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;其中user改成自己的GitHub用户名&lt;/li&gt;
&lt;li&gt;来到&lt;code&gt;根目录\public&lt;/code&gt;下，依次输入以下cmd命令：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -S -m &amp;#34;commit&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;启用github-pages&#34;&gt;启用Github Pages
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Github Pages需要公开仓库，如不想公开，可以新建私人仓库并跳过这一步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;来到&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;仓库 → settings Pages → Deploy from a branch → 选择main分支 → Save&lt;/li&gt;
&lt;li&gt;之后会进行自动构建，默认网址是https://user.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;启用cloudflares-pages&#34;&gt;启用Cloudflares Pages
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在&lt;a class=&#34;link&#34; href=&#34;https://dash.cloudflare.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt;登录后，Workers 和 Pages → 创建Pages → 连接到Git → 选择之前上传的Github仓库与分支main → 框架预设无 → 保存并部署。&lt;/li&gt;
&lt;li&gt;之后会进行自动构建，默认网址是https://你的Pages名.pages.dev&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;日常写作&#34;&gt;日常写作
&lt;/h2&gt;&lt;p&gt;如果能构建成功并打开网址，以后只需要在博客根目录下自行创建.md文件并用markdown写作即可，目录结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;content
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── post
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── my-first-post
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ├── index.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ├── image1.png
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        └── image2.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编辑时可以构建本地博客实时预览，在&lt;code&gt;根目录&lt;/code&gt;下cmd命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;默认网址http://localhost:1313/ &lt;br&gt;
完成之后来到&lt;code&gt;根目录&lt;/code&gt;下构建一次（不带server的命令会完全应用baseurl的参数，以在正式的网站上而不是localhost正确运行），cmd命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最后来到&lt;code&gt;根目录\public&lt;/code&gt;下提交到Github，依次输入以下cmd命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -S -m &amp;#34;commit&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;之后Github Pages/Cloudflare Pages会自动重新构建，只需稍等就可以在网页看到了&lt;/p&gt;
&lt;h2 id=&#34;补充&#34;&gt;补充
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;修改css样式后可能需要删除&lt;code&gt;根目录\resources\_gen&lt;/code&gt;下所有文件重新构建才生效。&lt;/li&gt;
&lt;li&gt;内容（post）不对时可能需要删除&lt;code&gt;根目录\public&lt;/code&gt;下所有文件重新构建，注意不要把.git文件夹删了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;——————&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/end.webp&#34;
	width=&#34;3004&#34;
	height=&#34;2087&#34;
	srcset=&#34;https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/end_hu18343251820008632103.webp 1024w, https://yukari.pages.dev/hugo--github-pages/cloudflare-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/end_hu7639147808640421034.webp 2048w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
